###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: Configure Proxy
  include_tasks: proxy_{{ ansible_os_family | lower }}.yml
  when: proxy is defined

- name: Run the equivalent of "apt-get update"
  become: true
  apt:
    update_cache: yes
  failed_when: false
  retries: 50
  register: res
  until: res.cache_update_time is defined

- name: Update the open-vm-tools package to latest version
  become: true
  apt:
    name: open-vm-tools
    state: latest

- name: Run the equivalent of "apt-get upgrade"
  become: true
  apt:
    upgrade: full

- name: Remove useless packages from the cache
  become: true
  apt:
    autoclean: yes

- name: Remove dependencies that are no longer required
  become: true
  apt:
    autoremove: yes

- name: Remove Customizations
  become: true
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/default/grub.d
    - /etc/machine-id
    - /var/lib/cloud
    - /etc/netplan/50-cloud-init.yaml
    - /etc/cloud/cloud.cfg.d

- name: Generate New Grub Configuration
  become: true
  command:
    cmd: update-grub

- name: Create new machine-id file
  become: true
  file:
    path: "{{ item }}"
    state: touch
    mode: u=r,g=r,o=r
  with_items:
    - /etc/machine-id

- name: Create new cloud.cfg.d directory
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /etc/cloud/cloud.cfg.d

- name: Remove remaining cloud-init data
  become: true
  command:
    cmd: cloud-init clean

- name: Shutdown VM Template
  delegate_to: localhost
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    name: "{{ inventory_hostname }}"
    state: shutdownguest

- name: Change Template VM Network to 'VM Network'
  delegate_to: localhost
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    name: "{{ inventory_hostname }}"
    datacenter: "{{ datacenter }}"
    networks:
    - name: VM Network

- name: Upgrade Hardware Version of Template VM
  delegate_to: localhost
  command: "{{ govc_file }} vm.upgrade -vm {{ inventory_hostname }}"

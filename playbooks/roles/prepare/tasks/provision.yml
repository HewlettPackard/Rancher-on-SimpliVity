###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 

- name: Configure Proxy
  become: true
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: proxy
    value: "{{ proxy.https }}"
    backup: yes
  when:
  - proxy is defined
  - ansible_pkg_mgr == "dnf"

- name: Install Required Packages
  become: true
  package:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - genisoimage
    
- name: Verify Presence of Required files
  stat:
    path: "{{ item }}"
  register: res
  failed_when: res.stat.exists == false
  with_items: "{{ prepare_required_files }}"

- name: Install client tools
  become: true
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    mode: u=rwx,g=rx,o=rx
  with_items: "{{ prepare_client_tools }}"

- name: create VM Folders
  vcenter_folder:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ datacenter }}"
    folder_name: "{{ item }}"
    folder_type: vm
    state: present
  with_items:
    - "{{ user_folder }}"
    - "{{ admin_folder }}"

- name: Create Resource Pools
  vmware_resource_pool:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: '{{ datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    resource_pool: '{{ item }}'
    mem_shares: normal
    mem_limit: -1
    mem_reservation: 0
    mem_expandable_reservations: yes
    cpu_shares: normal
    cpu_limit: -1
    cpu_reservation: 0
    cpu_expandable_reservations: yes
    state: present
  with_items:
    - "{{ user_folder }}"
    - "{{ admin_folder }}"

- name: Populate /etc/hosts
  become: true
  blockinfile:
    path: /etc/hosts
    block: |
      {{ hostvars[item].ansible_host }} {{ hostvars[item].inventory_hostname }} {{ hostvars[item].inventory_hostname }}.{{ domain_name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ hostvars[item].inventory_hostname }}"
  with_items:
  - "{{ groups['all'] | difference (groups.local) }}"

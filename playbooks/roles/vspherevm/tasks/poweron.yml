###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Power on VM
  delegate_to: localhost
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ datacenter }}"
    folder: "{{ datacenter }}/vm/{{ folder }}"
    name: "{{ inventory_hostname }}"
    state: poweredon
    wait_for_ip_address: true

- name: Wait for the SSH connection
  wait_for_connection:
    delay: 10
    sleep: 5
    timeout: 300

- name: Disable Cloud-init
  become: true
  file:
    state: touch
    path: /etc/cloud/cloud-init.disabled

#- name: cloud-init-status
#  become: true
#  shell: |
#    cloud-init status
#  changed_when: false
#  register: res
#  retries: 20
#  until: |
#    res.stdout == "status: done" or 

- name: Attempt to detach the cloud-init CDROM from the VM
  delegate_to: localhost
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    name: "{{ inventory_hostname }}"
    cdrom:
      type: none
    force: yes
  failed_when: false
  register: vm_specs

- block:

  - name: Find the name of the folder containing the VM files
    set_fact:
      fname: "{{ fpath.split(' ')[1] }}"
    vars:
      fpath: "{{ vm_specs.instance.hw_files[0].split('/')[0] }}"
    failed_when: false

  - name: Attempt to remove cloud-init ISO from the datastore
    delegate_to: localhost
    vsphere_file:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: "{{ vcenter_validate_certs }}"
      datacenter: "{{ datacenter }}"
      datastore: "{{ datastore }}"
      path: "{{ fname }}/cloud-init.iso"
      state: absent
    failed_when: false

  when: vm_specs is defined

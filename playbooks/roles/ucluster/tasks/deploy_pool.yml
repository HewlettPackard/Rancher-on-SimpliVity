###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: See if node template exists
  uri:
    url:  "{{ rancher.url }}/{{ rancher.apiversion }}/nodetemplates?name={{ item.node_template.name }}"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ bearer_token }}
    method: GET
    timeout: 4
    status_code:
    - 200
  register: pool_template

- name: Fail if template not found
  fail:
  when: pool_template.json.data | count <= 0

- name: See if Pool "{{ item.name }}" exists
  uri:
    url:  "{{ clusters.json.data[0].links.nodePools }}?name={{ item.name }}"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ bearer_token }}
    method: GET
    timeout: 4
    status_code:
    - 200
  register: nodepools

- name: Create Pool "{{ item.name }}"
  uri:
    url: "{{ rancher.url }}/{{ rancher.apiversion }}/NodePools"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ bearer_token }}
    method: POST
    timeout: 4
    status_code:
    - 201
    body_format: json
    body:
      clusterId: "{{ clusters.json.data[0].id }}"
      etcd: "{{ item.etcd }}"
      controlPlane: "{{ item.master }}"
      worker: "{{ item.worker }}"
      deleteNotReadyAfterSecs: 0
      displayName: "{{ item.name }}"
      hostnamePrefix: "{{ item.hostPrefix }}"
      name: "{{ item.name }}"
      namespaceId: ""
      nodeTaints: []
      nodeTemplateId: "{{ pool_template.json.data[0].id }}"
      quantity: "{{ item.count }}"
  delegate_to: localhost
  register: res
  when: nodepools.json.data | count <= 0

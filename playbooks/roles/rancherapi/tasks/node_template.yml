###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

---
- name: See if the node template is already existing
  uri:
    url:  "{{ rancher.url }}/{{ rancher.apiversion }}/nodetemplates?name={{ rancher.node_template }}"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ rancher.bearer_token }}
    method: GET
    timeout: 4
    status_code:
    - 200
  register: node_templates

- name: Create the Node Template
  uri:
    url: "{{ rancher.url }}/{{ rancher.apiversion }}/nodetemplates"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ rancher.bearer_token }}
    method: POST
    timeout: 4
    status_code:
    - 201
    body_format: json
    body:
      baseType: nodeTemplate
      driver: vmwarevsphere
      description: "My template"
      name: "{{ rancher.node_template }}"
      cloudCredentialId: "{{ cloudcreds.json.data[0].id }}"
#      labels:
#        hpe.io/creator: cloudbusters
      engineEnv: "{{ lookup('template','engineEnv.j2') | from_yaml }}"
      engineInstallURL: "{{ rancher.engineInstallURL }}"
      vmwarevsphereConfig:
        boot2dockerUrl": ""
        cfgparam:
          - "disk.enableUUID=TRUE"
        cloneFrom: "/{{ datacenter }}/vm/{{ datastore }}/{{ admin_template }}"
        creationType: vm
        cloudConfig: "{{ lookup('template','cloud-config.j2') }}"
        cloudinit: ""
        cpuCount: "{{rancher.cpu_count }}"
        customAttribute: ""
        datacenter: "/{{ datacenter }}"
        datastore: "/{{ datacenter }}/datastore/{{ datastore }}"
        diskSize: "{{ rancher.disk_size }}"
        folder: "/{{ datacenter }}/vm/{{ user_folder }}"
        memorySize: "{{ rancher.memory_size }}"
        network:
          - "/{{ datacenter }}/network/{{ vm_portgroup }}"
        pool: "/{{ datacenter }}/host/{{ vcenter_cluster }}/Resources/{{ user_folder }}"
  register: res
  when: node_templates.json.data | count <= 0

- name: Verify the the Node Template exists
  uri:
    url:  "{{ rancher.url }}/{{ rancher.apiversion }}/nodetemplates?name={{ rancher.node_template }}"
    validate_certs: "{{ rancher.validate_certs }}"
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: Bearer {{ rancher.bearer_token }}
    method: GET
    timeout: 4
    status_code:
    - 200
  register: node_templates

- name: Fail if Node Template not found
  fail:
  when: node_templates.json.data | count <= 0

- debug: var=node_templates.json.data[0].id
